/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen3_screen/Screen3ViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Screen3ViewBase::Screen3ViewBase() :
    buttonCallback(this, &Screen3ViewBase::buttonCallbackHandler),
    sliderValueChangedCallback(this, &Screen3ViewBase::sliderValueChangedCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    __background.setPosition(0, 0, 480, 800);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    image_bg.setXY(0, 0);
    image_bg.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_BACKGROUNDS_480X800_PUZZLE_ID));
    add(image_bg);

    butonPrev.setXY(16, 722);
    butonPrev.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_DISABLED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_DISABLED_ID));
    butonPrev.setLabelText(touchgfx::TypedText(T___SINGLEUSE_IFSU));
    butonPrev.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    butonPrev.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    butonPrev.setAction(buttonCallback);
    add(butonPrev);

    butonNext.setXY(402, 722);
    butonNext.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_DISABLED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_DISABLED_ID));
    butonNext.setLabelText(touchgfx::TypedText(T___SINGLEUSE_5MCB));
    butonNext.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    butonNext.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    butonNext.setAction(buttonCallback);
    add(butonNext);

    textArea2.setXY(36, 151);
    textArea2.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea2.setLinespacing(0);
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8XBK));
    add(textArea2);

    Node7CANID.setXY(372, 234);
    Node7CANID.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Node7CANID.setLinespacing(0);
    Unicode::snprintf(Node7CANIDBuffer, NODE7CANID_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_OZAG).getText());
    Node7CANID.setWildcard(Node7CANIDBuffer);
    Node7CANID.resizeToCurrentText();
    Node7CANID.setTypedText(touchgfx::TypedText(T___SINGLEUSE_F127));
    add(Node7CANID);

    Node7Status.setPosition(363, 187, 30, 30);
    Node7Status.setCenter(15, 15);
    Node7Status.setRadius(15);
    Node7Status.setLineWidth(0);
    Node7Status.setArc(0, 360);
    Node7StatusPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    Node7Status.setPainter(Node7StatusPainter);
    add(Node7Status);

    Node6CANID.setXY(332, 234);
    Node6CANID.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Node6CANID.setLinespacing(0);
    Unicode::snprintf(Node6CANIDBuffer, NODE6CANID_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_ENRP).getText());
    Node6CANID.setWildcard(Node6CANIDBuffer);
    Node6CANID.resizeToCurrentText();
    Node6CANID.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KBZE));
    add(Node6CANID);

    Node6Status.setPosition(323, 187, 30, 30);
    Node6Status.setCenter(15, 15);
    Node6Status.setRadius(15);
    Node6Status.setLineWidth(0);
    Node6Status.setArc(0, 360);
    Node6StatusPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    Node6Status.setPainter(Node6StatusPainter);
    add(Node6Status);

    Node5CANID.setXY(291, 234);
    Node5CANID.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Node5CANID.setLinespacing(0);
    Unicode::snprintf(Node5CANIDBuffer, NODE5CANID_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_2D2W).getText());
    Node5CANID.setWildcard(Node5CANIDBuffer);
    Node5CANID.resizeToCurrentText();
    Node5CANID.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8LVA));
    add(Node5CANID);

    Node5Status.setPosition(283, 187, 30, 30);
    Node5Status.setCenter(15, 15);
    Node5Status.setRadius(15);
    Node5Status.setLineWidth(0);
    Node5Status.setArc(0, 360);
    Node5StatusPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    Node5Status.setPainter(Node5StatusPainter);
    add(Node5Status);

    Node4CANID.setXY(257, 234);
    Node4CANID.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Node4CANID.setLinespacing(0);
    Unicode::snprintf(Node4CANIDBuffer, NODE4CANID_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_99DY).getText());
    Node4CANID.setWildcard(Node4CANIDBuffer);
    Node4CANID.resizeToCurrentText();
    Node4CANID.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UKW9));
    add(Node4CANID);

    Node4Status.setPosition(248, 187, 30, 30);
    Node4Status.setCenter(15, 15);
    Node4Status.setRadius(15);
    Node4Status.setLineWidth(0);
    Node4Status.setArc(0, 360);
    Node4StatusPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    Node4Status.setPainter(Node4StatusPainter);
    add(Node4Status);

    Node3CANID.setXY(217, 234);
    Node3CANID.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Node3CANID.setLinespacing(0);
    Unicode::snprintf(Node3CANIDBuffer, NODE3CANID_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5AGB).getText());
    Node3CANID.setWildcard(Node3CANIDBuffer);
    Node3CANID.resizeToCurrentText();
    Node3CANID.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZJE7));
    add(Node3CANID);

    Node3Status.setPosition(208, 187, 30, 30);
    Node3Status.setCenter(15, 15);
    Node3Status.setRadius(15);
    Node3Status.setLineWidth(0);
    Node3Status.setArc(0, 360);
    Node3StatusPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    Node3Status.setPainter(Node3StatusPainter);
    add(Node3Status);

    Node2CANID.setXY(177, 234);
    Node2CANID.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Node2CANID.setLinespacing(0);
    Unicode::snprintf(Node2CANIDBuffer, NODE2CANID_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_TZG9).getText());
    Node2CANID.setWildcard(Node2CANIDBuffer);
    Node2CANID.resizeToCurrentText();
    Node2CANID.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LNGC));
    add(Node2CANID);

    Node2Status.setPosition(168, 187, 30, 30);
    Node2Status.setCenter(15, 15);
    Node2Status.setRadius(15);
    Node2Status.setLineWidth(0);
    Node2Status.setArc(0, 360);
    Node2StatusPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    Node2Status.setPainter(Node2StatusPainter);
    add(Node2Status);

    Node1CANID.setXY(136, 234);
    Node1CANID.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Node1CANID.setLinespacing(0);
    Unicode::snprintf(Node1CANIDBuffer, NODE1CANID_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9BTJ).getText());
    Node1CANID.setWildcard(Node1CANIDBuffer);
    Node1CANID.resizeToCurrentText();
    Node1CANID.setTypedText(touchgfx::TypedText(T___SINGLEUSE_7LX8));
    add(Node1CANID);

    Node1Status.setPosition(127, 187, 30, 30);
    Node1Status.setCenter(15, 15);
    Node1Status.setRadius(15);
    Node1Status.setLineWidth(0);
    Node1Status.setArc(0, 360);
    Node1StatusPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    Node1Status.setPainter(Node1StatusPainter);
    add(Node1Status);

    Node0CANID.setXY(97, 234);
    Node0CANID.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Node0CANID.setLinespacing(0);
    Unicode::snprintf(Node0CANIDBuffer, NODE0CANID_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_VWZC).getText());
    Node0CANID.setWildcard(Node0CANIDBuffer);
    Node0CANID.resizeToCurrentText();
    Node0CANID.setTypedText(touchgfx::TypedText(T___SINGLEUSE_KZIP));
    add(Node0CANID);

    Node0Status.setPosition(88, 187, 30, 30);
    Node0Status.setCenter(15, 15);
    Node0Status.setRadius(15);
    Node0Status.setLineWidth(0);
    Node0Status.setArc(0, 360);
    Node0StatusPainter.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    Node0Status.setPainter(Node0StatusPainter);
    add(Node0Status);

    boxWithBorder1.setPosition(54, 270, 369, 421);
    boxWithBorder1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    boxWithBorder1.setBorderColor(touchgfx::Color::getColorFromRGB(11, 76, 99));
    boxWithBorder1.setBorderSize(5);
    boxWithBorder1.setAlpha(40);
    add(boxWithBorder1);

    NodeXCANID.setPosition(72, 331, 199, 24);
    NodeXCANID.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    NodeXCANID.setLinespacing(0);
    Unicode::snprintf(NodeXCANIDBuffer, NODEXCANID_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_JAKH).getText());
    NodeXCANID.setWildcard(NodeXCANIDBuffer);
    NodeXCANID.setTypedText(touchgfx::TypedText(T___SINGLEUSE_32KA));
    add(NodeXCANID);

    NodeXHBconsState.setPosition(72, 365, 325, 28);
    NodeXHBconsState.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    NodeXHBconsState.setLinespacing(0);
    Unicode::snprintf(NodeXHBconsStateBuffer, NODEXHBCONSSTATE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_YN6U).getText());
    NodeXHBconsState.setWildcard(NodeXHBconsStateBuffer);
    NodeXHBconsState.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LVG4));
    add(NodeXHBconsState);

    NodeXNMTState.setPosition(72, 400, 304, 26);
    NodeXNMTState.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    NodeXNMTState.setLinespacing(0);
    Unicode::snprintf(NodeXNMTStateBuffer, NODEXNMTSTATE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_JCSK).getText());
    NodeXNMTState.setWildcard(NodeXNMTStateBuffer);
    NodeXNMTState.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JOIY));
    add(NodeXNMTState);

    NodeXHBconsTimeout.setXY(298, 478);
    NodeXHBconsTimeout.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    NodeXHBconsTimeout.setLinespacing(0);
    Unicode::snprintf(NodeXHBconsTimeoutBuffer, NODEXHBCONSTIMEOUT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0NYJ).getText());
    NodeXHBconsTimeout.setWildcard(NodeXHBconsTimeoutBuffer);
    NodeXHBconsTimeout.resizeToCurrentText();
    NodeXHBconsTimeout.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SAID));
    add(NodeXHBconsTimeout);

    buttonNodeXHBcTInc.setXY(367, 472);
    buttonNodeXHBcTInc.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_MICRO_OUTLINE_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_MICRO_OUTLINE_PRESSED_ID));
    buttonNodeXHBcTInc.setLabelText(touchgfx::TypedText(T___SINGLEUSE_1SUC));
    buttonNodeXHBcTInc.setLabelColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    buttonNodeXHBcTInc.setLabelColorPressed(touchgfx::Color::getColorFromRGB(0, 0, 0));
    buttonNodeXHBcTInc.setAction(buttonCallback);
    add(buttonNodeXHBcTInc);

    buttonNodeXHBcTDec.setXY(243, 472);
    buttonNodeXHBcTDec.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_MICRO_OUTLINE_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_MICRO_OUTLINE_PRESSED_ID));
    buttonNodeXHBcTDec.setLabelText(touchgfx::TypedText(T___SINGLEUSE_ZFMV));
    buttonNodeXHBcTDec.setLabelColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    buttonNodeXHBcTDec.setLabelColorPressed(touchgfx::Color::getColorFromRGB(0, 0, 0));
    buttonNodeXHBcTDec.setAction(buttonCallback);
    add(buttonNodeXHBcTDec);

    textArea1.setPosition(73, 519, 272, 31);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea1.setLinespacing(0);
    textArea1.setWideTextAction(WIDE_TEXT_WORDWRAP);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZSWV));
    add(textArea1);

    NodeXHBprodTime.setXY(298, 603);
    NodeXHBprodTime.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    NodeXHBprodTime.setLinespacing(0);
    Unicode::snprintf(NodeXHBprodTimeBuffer, NODEXHBPRODTIME_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_RXBO).getText());
    NodeXHBprodTime.setWildcard(NodeXHBprodTimeBuffer);
    NodeXHBprodTime.resizeToCurrentText();
    NodeXHBprodTime.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LX0V));
    add(NodeXHBprodTime);

    buttonNodeXHBpTInc.setXY(366, 597);
    buttonNodeXHBpTInc.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_MICRO_OUTLINE_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_MICRO_OUTLINE_PRESSED_ID));
    buttonNodeXHBpTInc.setLabelText(touchgfx::TypedText(T___SINGLEUSE_RVOT));
    buttonNodeXHBpTInc.setLabelColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    buttonNodeXHBpTInc.setLabelColorPressed(touchgfx::Color::getColorFromRGB(0, 0, 0));
    buttonNodeXHBpTInc.setAction(buttonCallback);
    add(buttonNodeXHBpTInc);

    buttonNodeXHBpTDec.setXY(243, 597);
    buttonNodeXHBpTDec.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_MICRO_OUTLINE_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUNDED_MICRO_OUTLINE_PRESSED_ID));
    buttonNodeXHBpTDec.setLabelText(touchgfx::TypedText(T___SINGLEUSE_ZMNU));
    buttonNodeXHBpTDec.setLabelColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    buttonNodeXHBpTDec.setLabelColorPressed(touchgfx::Color::getColorFromRGB(0, 0, 0));
    buttonNodeXHBpTDec.setAction(buttonCallback);
    add(buttonNodeXHBpTDec);

    buttonNodeXHBpTGet.setXY(276, 552);
    buttonNodeXHBpTGet.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID));
    buttonNodeXHBpTGet.setLabelText(touchgfx::TypedText(T___SINGLEUSE_6HSG));
    buttonNodeXHBpTGet.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonNodeXHBpTGet.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonNodeXHBpTGet.setAction(buttonCallback);
    add(buttonNodeXHBpTGet);

    buttonNodeXHBpTSet.setXY(271, 640);
    buttonNodeXHBpTSet.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID));
    buttonNodeXHBpTSet.setLabelText(touchgfx::TypedText(T___SINGLEUSE_B4SN));
    buttonNodeXHBpTSet.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonNodeXHBpTSet.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonNodeXHBpTSet.setAction(buttonCallback);
    add(buttonNodeXHBpTSet);

    sliderIndex.setXY(81, 291);
    sliderIndex.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_HORIZONTAL_THIN_TRACK_MEDIUM_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_HORIZONTAL_THIN_TRACK_MEDIUM_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_HORIZONTAL_THIN_ROUND_LIGHT_ID));
    sliderIndex.setupHorizontalSlider(12, 9, 0, 0, 300);
    sliderIndex.setValueRange(0, 7);
    sliderIndex.setValue(0);
    sliderIndex.setNewValueCallback(sliderValueChangedCallback);
    add(sliderIndex);

    boxWithBorder2.setPosition(54, 29, 369, 102);
    boxWithBorder2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    boxWithBorder2.setBorderColor(touchgfx::Color::getColorFromRGB(11, 76, 99));
    boxWithBorder2.setBorderSize(5);
    boxWithBorder2.setAlpha(40);
    add(boxWithBorder2);

    textCANID.setXY(68, 48);
    textCANID.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textCANID.setLinespacing(0);
    Unicode::snprintf(textCANIDBuffer, TEXTCANID_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_QVOL).getText());
    textCANID.setWildcard(textCANIDBuffer);
    textCANID.resizeToCurrentText();
    textCANID.setTypedText(touchgfx::TypedText(T___SINGLEUSE_88K3));
    add(textCANID);

    textNMTState.setPosition(69, 85, 259, 27);
    textNMTState.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textNMTState.setLinespacing(0);
    Unicode::snprintf(textNMTStateBuffer, TEXTNMTSTATE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_8VWM).getText());
    textNMTState.setWildcard(textNMTStateBuffer);
    textNMTState.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8B5Z));
    add(textNMTState);

    textArea3.setXY(73, 434);
    textArea3.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea3.setLinespacing(0);
    textArea3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LQWV));
    add(textArea3);
}

Screen3ViewBase::~Screen3ViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Screen3ViewBase::setupScreen()
{

}

void Screen3ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &butonNext)
    {
        //Screen3Next
        //When butonNext clicked change screen to Screen4
        //Go to Screen4 with screen transition towards East
        application().gotoScreen4ScreenSlideTransitionEast();
    }
    if (&src == &butonPrev)
    {
        //Screen3Prev
        //When butonPrev clicked change screen to Screen2
        //Go to Screen2 with screen transition towards West
        application().gotoScreen2ScreenSlideTransitionWest();
    }
    if (&src == &buttonNodeXHBcTInc)
    {
        //buttonNodeXHBTinc
        //When buttonNodeXHBcTInc clicked execute C++ code
        //Execute C++ code
        presenter->buttonNodeXHBTinc(idx);
    }
    if (&src == &buttonNodeXHBcTDec)
    {
        //buttonNodeXHBTDec
        //When buttonNodeXHBcTDec clicked execute C++ code
        //Execute C++ code
        presenter->buttonNodeXHBTdec(idx);
    }
    if (&src == &buttonNodeXHBpTGet)
    {
        //buttonNodeXHBpTGet
        //When buttonNodeXHBpTGet clicked execute C++ code
        //Execute C++ code
        presenter->getHBprodTime(idx);
    }
    if (&src == &buttonNodeXHBpTSet)
    {
        //buttonNodeXHBpTSet
        //When buttonNodeXHBpTSet clicked execute C++ code
        //Execute C++ code
        presenter->setHBprodTime(idx);
    }
    if (&src == &buttonNodeXHBpTInc)
    {
        //buttonNodeXHBpTInc
        //When buttonNodeXHBpTInc clicked execute C++ code
        //Execute C++ code
        presenter->HBprodTimeInc(idx);
    }
    if (&src == &buttonNodeXHBpTDec)
    {
        //buttonNodeXHBpTDec
        //When buttonNodeXHBpTDec clicked execute C++ code
        //Execute C++ code
        presenter->HBprodTimeDec(idx);
    }
}

void Screen3ViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value)
{
    if (&src == &sliderIndex)
    {
        //indexChangeValue
        //When sliderIndex value changed call virtual function
        //Call indexChangeValue
        indexChangeValue(value);
    }
}
