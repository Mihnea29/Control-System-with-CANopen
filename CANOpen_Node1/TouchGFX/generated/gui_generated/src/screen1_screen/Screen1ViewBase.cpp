/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen1_screen/Screen1ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Screen1ViewBase::Screen1ViewBase() :
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 480, 800);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    image_bg.setXY(0, 0);
    image_bg.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_BACKGROUNDS_480X800_PUZZLE_ID));
    add(image_bg);

    butonNext.setXY(402, 722);
    butonNext.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_DISABLED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_DISABLED_ID));
    butonNext.setLabelText(touchgfx::TypedText(T___SINGLEUSE_56FK));
    butonNext.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    butonNext.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    butonNext.setAction(buttonCallback);
    add(butonNext);

    label_Aplication.setPosition(11, 73, 451, 28);
    label_Aplication.setColor(touchgfx::Color::getColorFromRGB(12, 10, 51));
    label_Aplication.setLinespacing(0);
    label_Aplication.setWideTextAction(WIDE_TEXT_WORDWRAP);
    label_Aplication.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PF79));
    add(label_Aplication);

    label_Autor1.setPosition(30, 245, 365, 28);
    label_Autor1.setColor(touchgfx::Color::getColorFromRGB(12, 10, 51));
    label_Autor1.setLinespacing(0);
    label_Autor1.setWideTextAction(WIDE_TEXT_WORDWRAP);
    label_Autor1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_74ZU));
    add(label_Autor1);

    label_Autor2.setPosition(30, 289, 365, 28);
    label_Autor2.setColor(touchgfx::Color::getColorFromRGB(12, 10, 51));
    label_Autor2.setLinespacing(0);
    label_Autor2.setWideTextAction(WIDE_TEXT_WORDWRAP);
    label_Autor2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4WOW));
    add(label_Autor2);

    label_Indrumator.setPosition(29, 341, 365, 28);
    label_Indrumator.setColor(touchgfx::Color::getColorFromRGB(12, 10, 51));
    label_Indrumator.setLinespacing(0);
    label_Indrumator.setWideTextAction(WIDE_TEXT_WORDWRAP);
    label_Indrumator.setTypedText(touchgfx::TypedText(T___SINGLEUSE_826X));
    add(label_Indrumator);

    textETTI.setPosition(30, 739, 362, 27);
    textETTI.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textETTI.setLinespacing(0);
    textETTI.setTypedText(touchgfx::TypedText(T___SINGLEUSE_INTI));
    add(textETTI);
}

Screen1ViewBase::~Screen1ViewBase()
{

}

void Screen1ViewBase::setupScreen()
{

}

void Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &butonNext)
    {
        //Scrren1Next
        //When butonNext clicked change screen to Screen2
        //Go to Screen2 with screen transition towards East
        application().gotoScreen2ScreenSlideTransitionEast();
    }
}
