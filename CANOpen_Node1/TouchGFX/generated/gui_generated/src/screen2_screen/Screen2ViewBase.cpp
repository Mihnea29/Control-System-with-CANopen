/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen2_screen/Screen2ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Screen2ViewBase::Screen2ViewBase() :
    buttonCallback(this, &Screen2ViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 480, 800);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    image_bg.setXY(0, 0);
    image_bg.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_BACKGROUNDS_480X800_PUZZLE_ID));
    add(image_bg);

    butonPrev.setXY(16, 746);
    butonPrev.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_DISABLED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_DISABLED_ID));
    butonPrev.setLabelText(touchgfx::TypedText(T___SINGLEUSE_RTJH));
    butonPrev.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    butonPrev.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    butonPrev.setAction(buttonCallback);
    add(butonPrev);

    butonNext.setXY(425, 746);
    butonNext.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_DISABLED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_MICRO_FILL_DISABLED_ID));
    butonNext.setLabelText(touchgfx::TypedText(T___SINGLEUSE_6EK0));
    butonNext.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    butonNext.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    butonNext.setAction(buttonCallback);
    add(butonNext);

    analogClock.setXY(10, 100);
    analogClock.setBackground(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_ANALOGCLOCK_BACKGROUNDS_LARGE_PLAIN_DARK_ID, 230, 230);
    analogClock.setupSecondHand(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_ANALOGCLOCK_HANDS_LARGE_SECOND_PLAIN_DARK_ID, 2, 168);
    analogClock.setupMinuteHand(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_ANALOGCLOCK_HANDS_LARGE_MINUTE_PLAIN_DARK_ID, 14, 153);
    analogClock.setMinuteHandSecondCorrection(false);
    analogClock.setupHourHand(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_ANALOGCLOCK_HANDS_LARGE_HOUR_PLAIN_DARK_ID, 13, 109);
    analogClock.setHourHandMinuteCorrection(false);
    analogClock.initializeTime24Hour(10, 10, 0);
    add(analogClock);

    digitalClock.setPosition(142, 592, 196, 52);
    digitalClock.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    digitalClock.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1MXR));
    digitalClock.displayLeadingZeroForHourIndicator(true);
    digitalClock.setDisplayMode(touchgfx::DigitalClock::DISPLAY_24_HOUR);
    digitalClock.setTime24Hour(10, 10, 0);
    add(digitalClock);

    textData.setPosition(0, 33, 480, 29);
    textData.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textData.setLinespacing(0);
    Unicode::snprintf(textDataBuffer, TEXTDATA_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_QLKQ).getText());
    textData.setWildcard(textDataBuffer);
    textData.setTypedText(touchgfx::TypedText(T___SINGLEUSE_7BBX));
    add(textData);
}

Screen2ViewBase::~Screen2ViewBase()
{

}

void Screen2ViewBase::setupScreen()
{

}

void Screen2ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &butonNext)
    {
        //Scrren2Next
        //When butonNext clicked change screen to Screen3
        //Go to Screen3 with screen transition towards East
        application().gotoScreen3ScreenSlideTransitionEast();
    }
    if (&src == &butonPrev)
    {
        //Screen2Prev
        //When butonPrev clicked change screen to Screen1
        //Go to Screen1 with screen transition towards West
        application().gotoScreen1ScreenSlideTransitionWest();
    }
}
